NAME
    Text::Password::Pronounceable::Harden - harden your pronounceable
    passwords

SYNOPSIS
      use Text::Password::Pronounceable::Harden;
      my $pwgen = Text::Password::Pronounceable::Harden->new(min => 8, max => 12);
      $pwgen->add_filter('RandomCase', probability => 2 );
      $pwgen->generate();

DESCRIPTION
    Althouh less secure than random passwords, most people have less
    problems to remember chunks of pronounceable characters rather than
    individual characters themselves. Text::Password::Pronounceable produces
    those, but it has the one disadvantage that it only uses lower case
    characters. This module tries to solve this shortcoming by providing a
    generic text filter to generate passwords that are at the same time easy
    to remember and harder to crack.

    It's intended to be used with filters like Text::Pipe::RandomCase, but
    you can actually use any of Text::Pipes filters if you want to.

CONSTRUCTION
    The following paramters can be passed to *new()*, but none of these are
    actually required:

    min The minimum numbers of characters a password should have. Defaults
        to 8.

    max The maximum numbers of characters a password should have. Defaults
        to 12.

    pipe
        A already initilized Text::Pipe::Stackable object.

    generator
        A already initilized Text::Password::Pronounceable object.

METHODS
  generate($min, $max)
    Generates a new password with Text::Password::Pronounceable and filter
    it through every pipe added via *add_filter* of the native pipe methods.

  add_filter($name, @arguments)
    Add the pipe segment *$name* to your stackable pipe and initialize it
    with *@arguments*. The construct is syntactically identical to the
    following:

      my $pipe = Text::Pipe->new($name, @arguments);
      $stacked_pipe->push($pipe);

  pop(), push(), shift(), unshift(), count(), clear() and splice()
    These methods are delegated to the underlying Text::Pipe::Stackable pipe
    attribute. Please note, that unlike *add_filter()* you will have to
    construct the pipe segments by hand with these methods.

VERSION
    0.01

AUTHOR
    Mario Domgoergen <mdom@cpan.org>

BUGS
    Please report any bugs or feature requests to
    "bug-text-password-pronounceable-harden at rt.cpan.org", or through the
    web interface at
    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Text-Passwort-Pronouncea
    ble-Harden>. I will be notified, and then you'll automatically be
    notified of progress on your bug as I make changes.

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc Text::Password::Pronounceable::Harden

    You can also look for information at:

    * RT: CPAN's request tracker
        <http://rt.cpan.org/NoAuth/Bugs.html?Dist=Text-Password-Pronounceabl
        e-Harden>

    * AnnoCPAN: Annotated CPAN documentation
        <http://annocpan.org/dist/Text-Password-Pronounceable-Harden>

    * CPAN Ratings
        <http://cpanratings.perl.org/d/Text-Password-Pronounceable-Harden>

    * Search CPAN
        <http://search.cpan.org/dist/Text-Password-Pronounceable-Harden>

LICENSE AND COPYRIGHT
    Copyright 2008-2009 Mario Domgoergen.

    This program is free software; you can redistribute it and/or modify it
    under the terms the GNU General Public License as published by the Free
    Software Foundation; either version 1, or (at your option) any later
    version.

